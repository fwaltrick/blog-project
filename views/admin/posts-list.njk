{% extends "admin/_admin-layout.njk" %}
{% from "_macros.njk" import adminConfirmModal %}

{% block title %}Posts - Admin Panel{% endblock %}

{% block header %}
  <div class="flex items-center justify-between">
    <h1 class="text-2xl font-sans font-semibold text-dark">Posts</h1>
    <div class="flex items-center space-x-4">
      <div class="relative">
        <div
          class="absolute inset-y-0 left-0 pl-3 flex items-center justify-center pointer-events-none"
        >
          <i class="fas fa-search text-lg text-gray-400"></i>
        </div>
        <input
          id="searchInput"
          type="text"
          placeholder="Search posts by title or author"
          class="pl-10 pr-4 py-2 border border-gray-300 rounded-md text-sm focus:ring-primary focus:border-primary w-80"
        />
      </div>
      <a
        href="/admin/posts/new"
        class="inline-flex items-center px-4 py-2 bg-primary text-white text-sm font-semibold rounded-md hover:bg-opacity-90 focus:ring-2 focus:ring-primary focus:ring-offset-2 transition-colors"
      >
        <i class="fas fa-plus text-sm mr-2"></i>
        Create Post
      </a>
    </div>
  </div>
{% endblock %}

{% block content %}
  <div class="bg-white shadow rounded-lg overflow-hidden">
    <table class="min-w-full divide-y divide-gray-200">
      <thead class="bg-gray-200">
        <tr>
          <th
            class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider"
          >
            Title
          </th>
          <th
            class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider"
          >
            Author
          </th>
          <th
            class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider"
          >
            Date
          </th>
          <th
            class="px-6 py-3 text-left text-xs font-semibold text-gray-700 uppercase tracking-wider"
          >
            Actions
          </th>
        </tr>
      </thead>
      <tbody class="bg-white divide-y divide-gray-200">
        {% for post in posts %}
          <tr
            class="hover:bg-gray-50"
            data-post-id="{{ post.id }}"
            data-post-title="{{ post.title }}"
            data-post-author="{{ post.author }}"
          >
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="flex items-center">
                <img
                  src="/images/{{ post.image }}"
                  alt="{{ post.title }}"
                  class="w-10 h-10 rounded-lg object-cover mr-3"
                />
                <div class="text-sm font-semibold text-dark">
                  {{ post.title }}
                </div>
              </div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="text-sm text-secondary">{{ post.author }}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap">
              <div class="text-sm text-secondary">{{ post.formattedDate }}</div>
            </td>
            <td class="px-6 py-4 whitespace-nowrap text-sm">
              <a
                href="/admin/posts/{{ post.id }}/edit"
                class="inline-flex items-center text-secondary hover:text-opacity-80 mr-4 font-medium"
              >
                <i class="fas fa-edit text-sm mr-1"></i>
                {# Edit #}
              </a>
              <button
                onclick="showDeleteModal('{{ post.id }}')"
                class="inline-flex items-center text-secondary hover:text-opacity-80 font-medium"
              >
                <i class="fas fa-trash text-sm mr-1"></i>
                {# Delete #}
              </button>
            </td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>

  <!-- Delete Confirmation Modal -->
  {{
    adminConfirmModal(
      id='deleteModal',
      title='Delete Post',
      message='This action cannot be undone. Are you sure you want to delete this post?',
      confirmText='Delete',
      cancelText='Cancel'
    )
  }}

  <script>
    let postToDelete = null;

    // Search functionality
    const searchInput = document.getElementById("searchInput");
    const tableRows = document.querySelectorAll("tbody tr");

    searchInput.addEventListener("input", function () {
      const searchTerm = this.value.toLowerCase().trim();

      tableRows.forEach((row) => {
        const title = row.getAttribute("data-post-title").toLowerCase();
        const author = row.getAttribute("data-post-author").toLowerCase();

        const matchesSearch =
          title.includes(searchTerm) || author.includes(searchTerm);

        if (matchesSearch || searchTerm === "") {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });

      // show "no results" message if no rows match the search
      updateNoResultsMessage(searchTerm);
    });

    function updateNoResultsMessage(searchTerm) {
      const tbody = document.querySelector("tbody");
      let noResultsRow = document.getElementById("noResultsRow");

      // Remove existing "no results" row if it exists
      if (noResultsRow) {
        noResultsRow.remove();
      }

      // Check if there are any visible rows (excluding the "no results" message)
      const currentRows = document.querySelectorAll(
        "tbody tr:not(#noResultsRow)",
      );
      const visibleRows = Array.from(currentRows).filter(
        (row) => row.style.display !== "none",
      );

      if (visibleRows.length === 0 && searchTerm !== "") {
        // Create new "no results" message
        noResultsRow = document.createElement("tr");
        noResultsRow.id = "noResultsRow";
        noResultsRow.innerHTML = `
          <td colspan="4" class="px-6 py-8 text-center text-gray-500">
            <i class="fas fa-search text-2xl mb-2 block text-gray-400"></i>
            No posts found matching "${searchTerm}"
          </td>
        `;
        tbody.appendChild(noResultsRow);
      }
    }

    function showDeleteModal(postId) {
      postToDelete = postId;

      // Get post title from data attribute
      const row = document.querySelector(`tr[data-post-id="${postId}"]`);
      const postTitle = row ? row.getAttribute("data-post-title") : "this post";

      // Update modal message with post title
      const modal = document.getElementById("deleteModal");
      const message = modal.querySelector(".text-secondary");
      message.textContent = `Are you sure you want to delete "${postTitle}"? This action cannot be undone.`;
      showModal("deleteModal");
    }

    // Handle confirm delete
    document
      .getElementById("deleteModalConfirm")
      .addEventListener("click", function () {
        if (postToDelete) {
          deletePost(postToDelete);
          closeModal("deleteModal");
          postToDelete = null;
        }
      });

    async function deletePost(id) {
      try {
        const response = await fetch(`/admin/posts/${id}`, {
          method: "DELETE",
          headers: {
            "Content-Type": "application/json",
            Accept: "application/json",
          },
        });

        const data = await response.json();
        
        if (response.ok) {
          // Remove the post row from the table
          const row = document.querySelector(`tr[data-post-id="${id}"]`);
          if (row) {
            row.remove();
            console.log(data.message);

            // Update search results
            const searchTerm = searchInput.value.toLowerCase().trim();
            updateNoResultsMessage(searchTerm);
          } else {
            // Fallback: reload the page if the row is not found
            location.reload();
          }
        } else {
          console.error("Delete error:", data);
          alert(data.message || "Error deleting post. Please try again.");
        }
      } catch (error) {
        console.error("Network error:", error);
        alert("Error deleting post. Please try again.");
      }
    }
  </script>
{% endblock %}
